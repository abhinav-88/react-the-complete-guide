{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/03-practice-project/src/components/UserInput/UserInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from './UserInput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInput = props => {\n  _s();\n  const initialUserInput = {\n    'current-savings': 10000,\n    'yearly-contribution': 1200,\n    'expected-return': 7,\n    'duration': 10\n  };\n  const [userInput, setUserInput] = useState(initialUserInput); // Hook imported from React to start managing state. One big State Object with one key per input element.\n  const submitHandler = event => {\n    event.preventDefault(); //Browsersdefault behavior is stopped(Reloding after submit)\n    props.onCalculate(userInput); // Passing userInput State to App.js\n  };\n\n  const resetHandler = event => {\n    setUserInput(initialUserInput);\n  };\n  const inputChangeHandler = (input, value) => {\n    setUserInput(prevInput => {\n      // setUserInput will receive latest value(prevInput).\n      return {\n        ...prevInput,\n        [input]: +value //Property input is not changed but value inside input is changed\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['input-group'],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => inputChangeHandler('current-savings', event.target.value),\n          value: userInput['current-savings'],\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => inputChangeHandler('yearly-contribution', event.target.value),\n          value: userInput['yearly-contribution'],\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['input-group'],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => inputChangeHandler('expected-return', event.target.value),\n          value: userInput['expected-return'],\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => inputChangeHandler('duration', event.target.value),\n          value: userInput['duration'],\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetHandler,\n        type: \"reset\",\n        className: classes.buttonAlt,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.button,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInput, \"OL/F48CuRZxN7OtvePsAMgZjytM=\");\n_c = UserInput;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","UserInput","props","_s","initialUserInput","userInput","setUserInput","submitHandler","event","preventDefault","onCalculate","resetHandler","inputChangeHandler","input","value","prevInput","onSubmit","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","type","id","actions","onClick","buttonAlt","button","_c","$RefreshReg$"],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/03-practice-project/src/components/UserInput/UserInput.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport classes from './UserInput.module.css';\nconst UserInput = (props) => {\n    const initialUserInput = {\n        'current-savings': 10000,\n        'yearly-contribution' : 1200,\n        'expected-return': 7,\n        'duration': 10\n    };\n    const [userInput, setUserInput] = useState(initialUserInput);         // Hook imported from React to start managing state. One big State Object with one key per input element.\n    const submitHandler = (event) => {\n        event.preventDefault();  //Browsersdefault behavior is stopped(Reloding after submit)\n        props.onCalculate(userInput); // Passing userInput State to App.js\n    };\n    const resetHandler = (event) => {\n        setUserInput(initialUserInput);\n    };\n    const inputChangeHandler = (input, value) => {\n        setUserInput((prevInput) =>{       // setUserInput will receive latest value(prevInput).\n            return{\n                ...prevInput,\n                [input]: +value,                 //Property input is not changed but value inside input is changed\n            };\n        });\n    };\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes['input-group']}>\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input onChange={(event) => \n            inputChangeHandler('current-savings', event.target.value )} \n            value={userInput['current-savings']}\n            type=\"number\" \n            id=\"current-savings\" />  {/*inputChangeHandler function will not be executed when this line of code is parsed, but instead only when this arrow function will be executed. And this function will be excuted only by React when the value in this input changes. 'current-savings'=input & event.target.value=value */}\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input onChange={(event) => \n            inputChangeHandler('yearly-contribution', event.target.value )} \n            value={userInput['yearly-contribution']}\n            type=\"number\" \n            id=\"yearly-contribution\" />\n        </p>\n      </div>\n      <div className={classes['input-group']}>\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input onChange={(event) => \n            inputChangeHandler('expected-return', event.target.value )} \n            value={userInput['expected-return']}\n            type=\"number\" \n            id=\"expected-return\" />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input onChange={(event) => \n            inputChangeHandler('duration', event.target.value )} \n            value={userInput['duration']}\n            type=\"number\" \n            id=\"duration\" />\n        </p>\n      </div>\n      <p className={classes.actions}>\n        <button onClick={resetHandler} type=\"reset\" className={classes.buttonAlt}>\n          Reset\n        </button>\n        <button type=\"submit\" className={classes.button}>\n          Calculate\n        </button>\n      </p>\n    </form>\n  );\n};\nexport default UserInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}