{"ast":null,"code":"// import React, { useState, useRef } from \"react\";\n// import Card from \"../UI/Card\";\n// import classes from \"./AddUser.module.css\";\n// import Button from \"../UI/Button\";\n// import UsersList from \"./UsersList\";\n// import ErrorModal from \"../UI/ErrorModal\";\n// import Wrapper from \"../Helpers/Wrapper\";\n// const AddUser = props => {\n//   const nameInputRef = useRef();\n//   const ageInputRef = useRef();\n//   // const [enteredUsername, setEnteredUsername] = useState(\"\");\n//   // const [enteredAge, setEnteredAge] = useState(\"\");\n//   const [error, setError] = useState();\n//   const addUserHandler = event => {\n//     event.preventDefault();\n//     const enteredName = nameInputRef.current.value;\n//     const enteredUserAge = ageInputRef.current.value;\n//     // props.onAddUser(enteredUsername, enteredAge);\n//     if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n//       setError({\n//         title: 'Invalid Input',\n//         message: 'Please enter a valid name & age (non-empty values).'\n//       });\n//       return;\n//     }\n//     if (+enteredUserAge < 1) {\n//       // + makes sure entereAge is a number\n//       setError({\n//         title: 'Invalid Age',\n//         message: 'Please enter a valid age (Greater than zero).'\n//       });\n//       return;\n//     }\n//     props.onAddUser(enteredName, enteredUserAge);\n//     // setEnteredUsername(\"\");\n//     // setEnteredAge(\"\");\n//   };\n//   // const usernameChangeHandler = event => {\n//   //   setEnteredUsername(event.target.value);\n//   // };\n//   // const ageChangeHandler = event => {\n//   //   setEnteredAge(event.target.value);\n//   // };\n//   const errorHandler = () => {\n//     setError(null);\n//   };\n//   return (\n//     <Wrapper>\n//       {error && <ErrorModal\n//         title={error.title}\n//         message={error.message} \n//         onConfirm={errorHandler}\n//       ></ErrorModal>}\n//       <Card className={classes.input}>\n//         <form onSubmit={addUserHandler}>\n//           {\" \"}\n//           {/* Do not add () with handler, adding will immediately execute the function when this line is parsed */}\n//           <label htmlFor=\"username\">Username</label>\n//           <input\n//             id=\"username\"\n//             type=\"text\"\n//             // value={enteredUsername}\n//             // onChange={usernameChangeHandler}\n//             ref={nameInputRef}\n//           />\n//           <label htmlFor=\"age\">Age(Years)</label>\n//           <input\n//             id=\"age\"\n//             type=\"number\"\n//             // value={enteredAge}\n//             // onChange={ageChangeHandler}\n//             ref={ageInputRef}\n//           />\n//           <Button type=\"submit\">Add User</Button>\n//         </form>\n//       </Card>\n//     </Wrapper>\n//   );\n// };\n// export default AddUser;","map":{"version":3,"names":[],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/04-practice-project2/src/components/Users/AddUser.js"],"sourcesContent":["// import React, { useState, useRef } from \"react\";\n// import Card from \"../UI/Card\";\n// import classes from \"./AddUser.module.css\";\n// import Button from \"../UI/Button\";\n// import UsersList from \"./UsersList\";\n// import ErrorModal from \"../UI/ErrorModal\";\n// import Wrapper from \"../Helpers/Wrapper\";\n// const AddUser = props => {\n//   const nameInputRef = useRef();\n//   const ageInputRef = useRef();\n//   // const [enteredUsername, setEnteredUsername] = useState(\"\");\n//   // const [enteredAge, setEnteredAge] = useState(\"\");\n//   const [error, setError] = useState();\n//   const addUserHandler = event => {\n//     event.preventDefault();\n//     const enteredName = nameInputRef.current.value;\n//     const enteredUserAge = ageInputRef.current.value;\n//     // props.onAddUser(enteredUsername, enteredAge);\n//     if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n//       setError({\n//         title: 'Invalid Input',\n//         message: 'Please enter a valid name & age (non-empty values).'\n//       });\n//       return;\n//     }\n//     if (+enteredUserAge < 1) {\n//       // + makes sure entereAge is a number\n//       setError({\n//         title: 'Invalid Age',\n//         message: 'Please enter a valid age (Greater than zero).'\n//       });\n//       return;\n//     }\n//     props.onAddUser(enteredName, enteredUserAge);\n//     // setEnteredUsername(\"\");\n//     // setEnteredAge(\"\");\n//   };\n//   // const usernameChangeHandler = event => {\n//   //   setEnteredUsername(event.target.value);\n//   // };\n//   // const ageChangeHandler = event => {\n//   //   setEnteredAge(event.target.value);\n//   // };\n//   const errorHandler = () => {\n//     setError(null);\n//   };\n//   return (\n//     <Wrapper>\n//       {error && <ErrorModal\n//         title={error.title}\n//         message={error.message} \n//         onConfirm={errorHandler}\n//       ></ErrorModal>}\n//       <Card className={classes.input}>\n//         <form onSubmit={addUserHandler}>\n//           {\" \"}\n//           {/* Do not add () with handler, adding will immediately execute the function when this line is parsed */}\n//           <label htmlFor=\"username\">Username</label>\n//           <input\n//             id=\"username\"\n//             type=\"text\"\n//             // value={enteredUsername}\n//             // onChange={usernameChangeHandler}\n//             ref={nameInputRef}\n//           />\n//           <label htmlFor=\"age\">Age(Years)</label>\n//           <input\n//             id=\"age\"\n//             type=\"number\"\n//             // value={enteredAge}\n//             // onChange={ageChangeHandler}\n//             ref={ageInputRef}\n//           />\n//           <Button type=\"submit\">Add User</Button>\n//         </form>\n//       </Card>\n//     </Wrapper>\n//   );\n// };\n// export default AddUser;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}