{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/06-usereducer-starting-project/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  // Created outside component. No need of data generated inside component function                                \n  const emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n      return {\n        value: action.val,\n        isValid: action.val.includes('@')\n      };\n    }\n    if (action.type === 'INPUT_BLUR') {\n      return {\n        value: state.value,\n        isValid: state.value.includes('@')\n      };\n    }\n    ;\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n  const passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n    }\n    if (action.type === 'INPUT_BLUR') {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    }\n    ;\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const authCtx = useContext();\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  //Destructuring object & providing alias\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  //Whenever just the value changes and validity does not change, this(below) effect will not rerun\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   emailState.value.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"aGzPx5ZG4bUbbAmHS7txBkmbzPc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","jsxDEV","_jsxDEV","Login","props","_s","formIsValid","setFormIsValid","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/06-usereducer-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  // Created outside component. No need of data generated inside component function                                \n  const emailReducer = (state, action) => { \n    if (action.type === 'USER_INPUT') {\n      return {value: action.val, isValid: action.val.includes('@')};\n    }   \n    if (action.type === 'INPUT_BLUR') {\n      return {value: state.value, isValid: state.value.includes('@')};\n    };\n    return {value: '', isValid: false};\n  };\n  const passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n      return {value: action.val, isValid: action.val.trim().length > 6};\n    }   \n    if (action.type === 'INPUT_BLUR') {\n      return {value: state.value, isValid: state.value.trim().length > 6};\n    };\n    return {value: '', isValid: false};\n  };\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '', \n    isValid: false\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '', \n    isValid: false\n  });\n\n  const authCtx = useContext()\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  //Destructuring object & providing alias\n  const { isValid: emailIsValid } = emailState;  \n  const { isValid: passwordIsValid } = passwordState;\n  //Whenever just the value changes and validity does not change, this(below) effect will not rerun\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n    // setFormIsValid(\n    //   emailState.value.isValid && passwordState.isValid\n    // );\n  };\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n    // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}