{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/16-forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  // const [formIsValid, setFormIsValid] = useState(false);\n  // useEffect(() => {\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    // setFormIsValid(true);\n    formIsValid = true;\n  } else {\n    // setFormIsValid(false);\n    formIsValid = false;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\"); //Reset the enetered value using state(Ideal)\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = enteredEmailIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a Valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"EHOaXWAR8DjNDRcADMR9OtbUjc8=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInvalid","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/16-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\nconst SimpleInput = props => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput(value => value.trim() !== '');\n\n  \n  \n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  // const [formIsValid, setFormIsValid] = useState(false);\n  // useEffect(() => {\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    // setFormIsValid(true);\n    formIsValid = true;\n  } else {\n    // setFormIsValid(false);\n    formIsValid = false;\n  }\n \n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\"); //Reset the enetered value using state(Ideal)\n    setEnteredNameTouched(false);\n\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = enteredEmailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n        />\n        {enteredEmailIsInvalid && (\n          <p className=\"error-text\">Please enter a Valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}