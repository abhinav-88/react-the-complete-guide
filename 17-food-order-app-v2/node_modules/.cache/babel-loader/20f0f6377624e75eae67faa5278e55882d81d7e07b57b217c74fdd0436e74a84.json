{"ast":null,"code":"// import React, { useContext, useState } from \"react\";\n// import Modal from \"../UI/Modal\";\n// import CartItem from \"./CartItem\";\n// import classes from \"./Cart.module.css\";\n// import CartContext from \"../../store/cart-context\";\n// import Checkout from \"./Checkout\";\n// const Cart = props => {\n//   const [isCheckout, setIsCheckout] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [didSubmit, setDidSubmit] = useState(false);\n//   const cartCtx = useContext(CartContext);\n//   const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n//   const hasItems = cartCtx.items.length > 0;\n//   const cartItemRemoveHandler = id => {\n//     cartCtx.removeItem(id);\n//   };\n//   const cartItemAddHandler = item => {\n//     cartCtx.addItem(item);\n//   };\n//   const orderHandler = () => {\n//     setIsCheckout(true);\n//   };\n\n//   const submitOrderHandler = async userData => {\n//     setIsSubmitting(true);\n//     await fetch(\n//       \"https://react-http-9266e-default-rtdb.firebaseio.com/orders.json\",\n//       {\n//         method: \"POST\",\n//         body: JSON.stringify({\n//           user: userData,\n//           orderedItem: cartCtx.items,\n//         }),\n//       }\n//     );\n//     setIsSubmitting(false);\n//     setDidSubmit(true);\n//     cartCtx.clearCart();\n//   };\n\n//   const modalActions = (\n//     <div className={classes.actions}>\n//       <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n//         Close\n//       </button>\n//       {hasItems && (\n//         <button className={classes.button} onClick={orderHandler}>\n//           Order\n//         </button>\n//       )}\n//     </div>\n//   );\n//   const cartItems = (\n//     <ul className={classes[\"cart-items\"]}>\n//       {cartCtx.items.map(item => (\n//         <CartItem\n//           key={item.id}\n//           name={item.name}\n//           amount={item.amount}\n//           price={item.price}\n//           onRemove={cartItemRemoveHandler.bind(null, item.id)}\n//           onAdd={cartItemAddHandler.bind(null, item)}\n//         />\n//       ))}\n//     </ul>\n//   );\n//   const cartModalContent = (\n//     <React.Fragment>\n//       {cartItems}\n//       <div className={classes.total}>\n//         <span>Total Amount</span>\n//         <span>{totalAmount}</span>\n//       </div>\n//       {isCheckout && (\n//         <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n//       )}\n//       {!isCheckout && modalActions}\n//     </React.Fragment>\n//   );\n//   const isSubmittingModalContent = <p>Sending order data...</p>;\n//   const didSubmitModalContent = (\n//     <React.Fragment>\n//       <p>Successfully sent the order!</p>\n//       <div className={classes.actions}>\n//         <button className={classes.button} onClick={props.onClose}>\n//           Close\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n//   return (\n//     <Modal onClose={props.onClose}>\n//       {!isSubmitting && !didSubmit && cartModalContent}\n//       {isSubmitting && isSubmittingModalContent}\n//       {!isSubmitting && didSubmit && didSubmitModalContent}\n//     </Modal>\n//   );\n// };\n// export default Cart;","map":{"version":3,"names":[],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/17-food-order-app-v2/src/components/Cart/Cart.js"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\n// import Modal from \"../UI/Modal\";\n// import CartItem from \"./CartItem\";\n// import classes from \"./Cart.module.css\";\n// import CartContext from \"../../store/cart-context\";\n// import Checkout from \"./Checkout\";\n// const Cart = props => {\n//   const [isCheckout, setIsCheckout] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [didSubmit, setDidSubmit] = useState(false);\n//   const cartCtx = useContext(CartContext);\n//   const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n//   const hasItems = cartCtx.items.length > 0;\n//   const cartItemRemoveHandler = id => {\n//     cartCtx.removeItem(id);\n//   };\n//   const cartItemAddHandler = item => {\n//     cartCtx.addItem(item);\n//   };\n//   const orderHandler = () => {\n//     setIsCheckout(true);\n//   };\n\n//   const submitOrderHandler = async userData => {\n//     setIsSubmitting(true);\n//     await fetch(\n//       \"https://react-http-9266e-default-rtdb.firebaseio.com/orders.json\",\n//       {\n//         method: \"POST\",\n//         body: JSON.stringify({\n//           user: userData,\n//           orderedItem: cartCtx.items,\n//         }),\n//       }\n//     );\n//     setIsSubmitting(false);\n//     setDidSubmit(true);\n//     cartCtx.clearCart();\n//   };\n\n//   const modalActions = (\n//     <div className={classes.actions}>\n//       <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n//         Close\n//       </button>\n//       {hasItems && (\n//         <button className={classes.button} onClick={orderHandler}>\n//           Order\n//         </button>\n//       )}\n//     </div>\n//   );\n//   const cartItems = (\n//     <ul className={classes[\"cart-items\"]}>\n//       {cartCtx.items.map(item => (\n//         <CartItem\n//           key={item.id}\n//           name={item.name}\n//           amount={item.amount}\n//           price={item.price}\n//           onRemove={cartItemRemoveHandler.bind(null, item.id)}\n//           onAdd={cartItemAddHandler.bind(null, item)}\n//         />\n//       ))}\n//     </ul>\n//   );\n//   const cartModalContent = (\n//     <React.Fragment>\n//       {cartItems}\n//       <div className={classes.total}>\n//         <span>Total Amount</span>\n//         <span>{totalAmount}</span>\n//       </div>\n//       {isCheckout && (\n//         <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\n//       )}\n//       {!isCheckout && modalActions}\n//     </React.Fragment>\n//   );\n//   const isSubmittingModalContent = <p>Sending order data...</p>;\n//   const didSubmitModalContent = (\n//     <React.Fragment>\n//       <p>Successfully sent the order!</p>\n//       <div className={classes.actions}>\n//         <button className={classes.button} onClick={props.onClose}>\n//           Close\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n//   return (\n//     <Modal onClose={props.onClose}>\n//       {!isSubmitting && !didSubmit && cartModalContent}\n//       {isSubmitting && isSubmittingModalContent}\n//       {!isSubmitting && didSubmit && didSubmitModalContent}\n//     </Modal>\n//   );\n// };\n// export default Cart;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}