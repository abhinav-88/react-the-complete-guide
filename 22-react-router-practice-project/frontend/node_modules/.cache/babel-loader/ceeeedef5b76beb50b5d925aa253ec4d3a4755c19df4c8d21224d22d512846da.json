{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/22-react-router-practice-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadedEvents(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","Suspense","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadEvent","loadedEvents","EventList","loadEvents","_c","id","response","fetch","ok","message","status","resData","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/abhinavch/Documents/WebDevelopmentJourney/React-Complete-Guide/22-react-router-practice-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n  const {event, events} = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <Suspense></Suspense>\n      <Await resolve={event}>\n        {loadedEvent => <EventItem event={loadEvent} />}\n      </Await>\n      <Await resolve={events}>\n        {loadedEvents => <EventList events={loadEvents}/>}\n      </Await>\n      \n      \n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nasync function loadedEvents(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    throw json(\n      { message: \"Could not fetch events.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  })\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n  });\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not delete event\" },\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect('/events');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}